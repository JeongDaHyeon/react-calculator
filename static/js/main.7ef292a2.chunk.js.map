{"version":3,"sources":["components/Panel.jsx","components/Display.jsx","components/ButtonGroup.jsx","components/Button.jsx","components/History.jsx","components/Calculator.jsx","index.js"],"names":["Container","styled","div","_templateObject","Panel","react","this","props","children","React","Display_templateObject","Display","Display_Container","data-testid","data-display","displayValue","ButtonGroup_templateObject","ButtonGroup","handleClick","e","_this","onClickButton","target","textContent","ButtonGroup_Container","onClick","Button_templateObject","p","size","Button","_this$props","_this$props$size","color","Button_Container","data-color","History_templateObject","History","History_Container","Calculator_templateObject","Box","_templateObject2","evalFunc","string","Function","nestedRoute","alert","length","substr","Math","sqrt","dot","Calculator","state","history","onClickHistory","event","_this$state$displayVa","className","tagName","firstChild","innerText","setState","key","_this$state$displayVa2","lastChar","fisrtChar","operatorKeys","proc","AC","BS","√","includes","eq","replace","unshift","equation","result","÷","×","-","+","=","substring",".","0","Number","_this2","Calculator_Container","components_Panel","components_Display","components_ButtonGroup","components_Button","components_History","map","history_","index","ReactDOM","render","react_default","a","createElement","components_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.7ef292a2.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 10px auto;\r\n  width: 300px;\r\n  padding: 10px;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nclass Panel extends React.Component {\r\n  render() {\r\n    return <Container>{this.props.children}</Container>;\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 5px;\r\n  [data-display] {\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    height: 60px;\r\n    line-height: 60px;\r\n    box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\r\n    text-align: left;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    padding: 0 15px;\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nclass Display extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div data-testid=\"display\" data-display>{this.props.displayValue}</div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :after {\r\n    content: \"\";\r\n    display: block;\r\n    clear: both;\r\n  }\r\n`;\r\n\r\nclass ButtonGroup extends React.Component {\r\n  handleClick = e => {\r\n    this.props.onClickButton(e.target.textContent);\r\n  };\r\n  render() {\r\n    return (\r\n      <Container onClick={this.handleClick}>{this.props.children}</Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonGroup;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  float: left;\r\n  width: ${p => (p.size / 4) * 100}%;\r\n  padding: 5px;\r\n  button {\r\n    :focus {\r\n      outline: none;\r\n    }\r\n    :hover {\r\n      background: #eee;\r\n    }\r\n    :active {\r\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n    }\r\n    color: #000;\r\n    font-size: 20px;\r\n    line-height: 40px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    background: transparent;\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n\r\n    &[data-color=\"gray\"] {\r\n      background: #eee;\r\n      :hover {\r\n        background: #ccc;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    const { size = 1, color, children } = this.props;\r\n    return (\r\n      <Container size={size}>\r\n        <button data-color={color}>{children}</button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 300px;\r\n  height: 374px;\r\n  padding: 10px;\r\n  margin: 20px auto;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n  overflow-y: scroll;\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n  ::-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari, Opera*/\r\n  }\r\n`;\r\n\r\n// TODO: Panel 을 참고해서 History component 생성 및 export\r\n\r\nclass History extends React.Component {\r\n  render() {\r\n    return <Container>{this.props.children}</Container>;\r\n  }\r\n}\r\n\r\nexport default History;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Panel from \"./Panel\";\r\nimport Display from \"./Display\";\r\nimport ButtonGroup from \"./ButtonGroup\";\r\nimport Button from \"./Button\";\r\nimport History from \"./History\"\r\n\r\n\r\nconst Container = styled.div`\r\n  margin: 30px auto;\r\n  text-align: center;\r\n`;\r\n\r\n// TODO: History 내에서 수식 표시할 때 사용\r\nconst Box = styled.div`\r\n  display: inline-block;\r\n  width: 270px;\r\n  height: 65px;\r\n  padding: 10px;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: right;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  h3 {\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nconst evalFunc = function(string) {\r\n  // eslint-disable-next-line no-new-func\r\n  return new Function(\"return (\" + string + \")\")();\r\n};\r\n\r\nconst nestedRoute = function(string) {\r\n  alert(string);\r\n  alert(string.length);\r\n  if(string.substr(0,1) === \"√\")\r\n  {\r\n    return Math.sqrt(nestedRoute(string.substr(2, string.length - 2)));\r\n  }\r\n  else\r\n  {\r\n    alert(string);\r\n    return evalFunc(string);\r\n  }\r\n}\r\n\r\nlet dot = true; // check dot is available\r\n\r\nclass Calculator extends React.Component {\r\n  // TODO: history 추가\r\n  state = {\r\n    displayValue: \"\",\r\n    history: []\r\n  };\r\n\r\n  onClickHistory = (event) => {\r\n    let { displayValue = \"\" } = this.state;\r\n    displayValue = event.target.className;\r\n    if(event.target.tagName === \"DIV\")\r\n    {\r\n      displayValue = event.target.firstChild.innerText;\r\n      // console.log(event.target.firstChild.innerText);\r\n    }\r\n    else\r\n    {\r\n      displayValue = event.target.className;\r\n    }\r\n    // if(event.target.tagName === \"DIV\")\r\n    // {\r\n    //   displayValue = event.target.firstChild.innerText;\r\n    //   // console.log(event.target.firstChild.innerText);\r\n    // }\r\n    // if(event.target.className === \"equation\")\r\n    // {\r\n    //   displayValue = event.target.innerText;\r\n    // }\r\n    // else if(event.target.className === \"result\")\r\n    // {\r\n    //   displayValue = event.target.previousSibling.innerText;\r\n    // }\r\n\r\n    this.setState({ displayValue: displayValue });\r\n  };\r\n\r\n\r\n  onClickButton = key => {\r\n    let { displayValue = \"\" } = this.state;\r\n    displayValue = \"\" + displayValue;\r\n    const lastChar = displayValue.substr(displayValue.length - 1);\r\n    const fisrtChar = displayValue.substr(0, 1);\r\n    const operatorKeys = [\"÷\", \"×\", \"-\", \"+\"];\r\n    const proc = {\r\n      AC: () => {\r\n        dot = true;\r\n        this.setState({ displayValue: \"\" });\r\n      },\r\n      BS: () => {\r\n        if (displayValue.length > 0) {\r\n          displayValue = displayValue.substr(0, displayValue.length - 1);\r\n        }\r\n        this.setState({ displayValue });\r\n      },\r\n      // TODO: 제곱근 구현\r\n      \"√\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          dot = true;\r\n          var eq = displayValue;\r\n          if(displayValue.substr(0,1) == \"√\")\r\n          {\r\n            displayValue = Math.sqrt(nestedRoute(displayValue));\r\n          }\r\n          else\r\n          {\r\n            displayValue = displayValue.replace(\"×\", \"*\");\r\n            displayValue = displayValue.replace(\"÷\", \"/\");\r\n            displayValue = evalFunc(displayValue);\r\n          }\r\n          displayValue =Math.sqrt(displayValue);\r\n          this.setState({displayValue});\r\n          this.state.history.unshift({equation:\"√(\"+eq+\")\", result: displayValue});\r\n        }\r\n      },\r\n      // TODO: 사칙연산 구현\r\n      \"÷\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) { // handling the lastchar is an operator\r\n          this.setState({ displayValue: displayValue + \"÷\" });\r\n          dot = true; // can use dot\r\n        }\r\n      },\r\n      \"×\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"×\" });\r\n          dot = true;\r\n        }\r\n      },\r\n      \"-\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"-\" });\r\n          dot = true;\r\n        }\r\n      },\r\n      \"+\": () => {\r\n        // + 연산 참고하여 연산 구현\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"+\" });\r\n          dot = true;\r\n        }\r\n      },\r\n      \"=\": () => {\r\n        if (lastChar !== \"\" && operatorKeys.includes(lastChar)) {\r\n          displayValue = displayValue.substr(0, displayValue.length - 1);\r\n        }\r\n        else if (lastChar !== \"\") {\r\n          var eq = displayValue;\r\n          if(fisrtChar === \"√\"){\r\n            displayValue = Math.sqrt(evalFunc(displayValue.substring(2, displayValue.length - 1)));\r\n          }\r\n          else\r\n          {\r\n            displayValue = displayValue.replace(\"×\", \"*\");\r\n            displayValue = displayValue.replace(\"÷\", \"/\");\r\n\r\n            displayValue = evalFunc(displayValue);\r\n          }\r\n          this.setState({ displayValue });\r\n          this.state.history.unshift({equation: eq, result: displayValue});\r\n\r\n          dot = true;\r\n        }\r\n        this.setState({ displayValue });\r\n      },\r\n      \".\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar) && dot) {\r\n          this.setState({ displayValue: displayValue + \".\" });\r\n          dot = false;\r\n        }\r\n      },\r\n      \"0\": () => {\r\n        if (Number(displayValue) !== 0) {\r\n          displayValue += \"0\";\r\n          this.setState({ displayValue });\r\n        }\r\n      }\r\n    };\r\n\r\n    if (proc[key]) {\r\n      proc[key]();\r\n    } else {\r\n      // 여긴 숫자\r\n      this.setState({ displayValue: displayValue + key });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Panel>\r\n          <Display displayValue={this.state.displayValue} />\r\n          <ButtonGroup onClickButton={this.onClickButton}>\r\n            <Button size={1} color=\"gray\">\r\n              AC\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              BS\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              √\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              ÷\r\n            </Button>\r\n\r\n            <Button size={1}>7</Button>\r\n            <Button size={1}>8</Button>\r\n            <Button size={1}>9</Button>\r\n            <Button size={1} color=\"gray\">\r\n              ×\r\n            </Button>\r\n\r\n            <Button size={1}>4</Button>\r\n            <Button size={1}>5</Button>\r\n            <Button size={1}>6</Button>\r\n            <Button size={1} color=\"gray\">\r\n              -\r\n            </Button>\r\n\r\n            <Button size={1}>1</Button>\r\n            <Button size={1}>2</Button>\r\n            <Button size={1}>3</Button>\r\n            <Button size={1} color=\"gray\">\r\n              +\r\n            </Button>\r\n\r\n            <Button size={2}>0</Button>\r\n            <Button size={1}>.</Button>\r\n            <Button size={1} color=\"gray\">\r\n              =\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Panel>\r\n        {/* TODO: History componet를 이용해 map 함수와 Box styled div를 이용해 history 표시 */}\r\n        <History>\r\n          {this.state.history.map((history_, index) => {\r\n            return (\r\n              <Box onClick={this.onClickHistory} className={history_.equation}>\r\n                <h3 className={history_.equation}>{history_.equation}</h3>\r\n                <h3 className={history_.equation}>= {history_.result}</h3>\r\n              </Box>\r\n            )\r\n          })}\r\n        </History>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport Calculator from \"./components/Calculator\";\r\n\r\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}